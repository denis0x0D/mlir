; SPIR-V
; Version: 1.3
; Generator: Khronos; 0
; Bound: 55
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %15 "compute_kernel" %gl_GlobalInvocationID
               OpExecutionMode %15 LocalSize 1 1 1
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %_struct_10 0 Offset 0
               OpDecorate %_struct_10 BufferBlock
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 0
               OpDecorate %13 DescriptorSet 0
               OpDecorate %13 Binding 1
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 2
        %int = OpTypeInt 32 1
       %bool = OpTypeBool
      %float = OpTypeFloat 32
      %int_0 = OpConstant %int 0
       %void = OpTypeVoid
          %8 = OpTypeFunction %void
      %v3int = OpTypeVector %int 3
      %_ptr_Input_v3int = OpTypePointer Input %v3int
    %float_ptr = OpTypePointer Function %float
%_runtimearr_int = OpTypeRuntimeArray %float
 %_struct_10 = OpTypeStruct %_runtimearr_int
%_ptr_Uniform__struct_10 = OpTypePointer StorageBuffer %_struct_10
         %12 = OpVariable %_ptr_Uniform__struct_10 StorageBuffer
         %13 = OpVariable %_ptr_Uniform__struct_10 StorageBuffer
         %14 = OpVariable %_ptr_Uniform__struct_10 StorageBuffer
         %gl_GlobalInvocationID = OpVariable %_ptr_Input_v3int Input
    %K = OpConstant %int 4
    %int_4 = OpConstant %int 4
%_ptr_Uniform_int = OpTypePointer StorageBuffer %float
%_ptr_Input_int = OpTypePointer Input %int
     %int_64 = OpConstant %int 64
      %int_1 = OpConstant %int 1
         %15 = OpFunction %void None %8
         %55 = OpLabel
               OpBranch %16
         %16 = OpLabel
         %index_k = OpPhi %int %int_0 %55 %22 %21
         %28 = OpSLessThan %bool %index_k %K
               OpLoopMerge %30 %21 None
               OpBranchConditional %28 %29 %30 64 1
         %29 = OpLabel
         %43 = OpInBoundsAccessChain %_ptr_Uniform_int %13 %int_0 %index_k
         %44 = OpInBoundsAccessChain %_ptr_Uniform_int %14 %int_0 %index_k
         %C_ptr = OpInBoundsAccessChain %_ptr_Uniform_int %12 %int_0 %index_k
         %45 = OpLoad %float %43 None
         %48 = OpLoad %float %44 None
         %49 = OpFMul %float %45 %48
               OpStore %C_ptr %49 None
               OpBranch %21
         %21 = OpLabel
         %22 = OpIAdd %int %index_k %int_1
               OpBranch %16
         %30 = OpLabel
               OpReturn
               OpFunctionEnd

